<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013, The Sporting Exchange Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd"
       xmlns:util="http://www.springframework.org/schema/util">


    <bean id="faultController" class="com.betfair.cougar.core.api.fault.FaultController" factory-method="getInstance">
        <property name="detailedFaults" value="$COUGAR-EV{cougar.fault.detailed}"/>
    </bean>

    <bean id="loggingErrorManager" class="com.betfair.cougar.logging.CougarLogManager"
        factory-method="getInstance">
        <property name="baseLogDirectory" value="$COUGAR{cougar.log.dir}"/>
    </bean>

    <bean id="serviceLogManagerFactory" class="com.betfair.cougar.core.impl.ev.DefaultServiceLogManagerFactory">
        <constructor-arg index="0" ref="cougar.core.EventLoggingRegistry"/>
    </bean>

    <bean id="serviceExecutableResolver" class="com.betfair.cougar.core.impl.ev.ServiceExecutableResolver">
        <property name="eventLogger" ref="cougar.core.EventLogger"/>
    </bean>

    <bean id="executionVenue" class="com.betfair.cougar.core.impl.ev.ContainerAwareExecutionVenue">
        <property name="serviceLogManagerFactory" ref="serviceLogManagerFactory"/>
        <property name="stats" ref="kpiMonitor"/>
        <property name="preProcessors" ref="preProcessorInterceptors"/>
        <property name="postProcessors" ref="postProcessorInterceptors"/>
        <property name="identityResolverFactory" ref="cougar.core.IdentityResolverFactory"/>
        <property name="monitorRegistry" ref="cougar.core.MonitorRegistry"/>
    </bean>

    <bean id="cougarIntroductionService" class="com.betfair.cougar.core.impl.CougarIntroductionService" lazy-init="false">
        <property name="executionVenue" ref="cougar.core.ExecutionVenue"/>
        <property name="serviceRegistrar" ref="cougar.core.ExecutionVenue"/>
        <property name="executableResolver" ref="serviceExecutableResolver"/>
        <property name="startingGate" ref="cougar.core.StartingGate"/>
        <property name="transportRegistry" ref="cougar.core.TransportRegistry"/>
    </bean>

    <!--
       Please don't delete this bean. It a spring hack to retrieve the value of the
       constant below and assign it to the specified ID. It can't be in the file twice
       because JAXB moans about duplicate bean names.
    -->
    <bean id="org.springframework.jmx.export.MBeanExporter.REGISTRATION_REPLACE_EXISTING"
          class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean" />


    <!-- JMX control and definition -->
    <bean id="jmxControl" class="com.betfair.cougar.util.jmx.JMXControl">
        <constructor-arg>
        <bean class="org.springframework.jmx.export.MBeanExporter">
            <property name="server" ref="mbeanServer"/>

            <property name="registrationBehavior" ref="org.springframework.jmx.export.MBeanExporter.REGISTRATION_REPLACE_EXISTING"/>

            <property name="beans">
                <map>
                </map>
            </property>
            <property name="assembler">
                <bean class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
                    <property name="attributeSource">
                        <bean class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>
                    </property>
                </bean>
            </property>
        </bean>
        </constructor-arg>
    </bean>

    <bean id="tlsHtmlAdaptorServer" class="com.betfair.cougar.core.impl.jmx.TlsHtmlAdaptorServer">
		<constructor-arg value="$COUGAR-EV{jmx.html.keystore.filepath}"/>
		<constructor-arg value="$COUGAR-EV{jmx.html.keystore.password}"/>
		<constructor-arg value="$COUGAR-EV{jmx.html.keystore.certpassword}"/>
		<constructor-arg value="$COUGAR-EV{jmx.html.port}"/>
		<constructor-arg value="$COUGAR-EV{jmx.html.keystore.type}"/>
		<constructor-arg value="$COUGAR-EV{jmx.html.tls.enabled}"/>
        <constructor-arg value="$COUGAR-EV{jmx.html.reuseAddress}"/>
	</bean>

	<bean id="htmlAdapter" class="com.betfair.cougar.core.impl.jmx.HtmlAdaptor">
        <constructor-arg ref="tlsHtmlAdaptorServer"/>
		<property name="MBeanServer" ref="mbeanServer"/>
		<property name="username" value="$COUGAR-EV{jmx.html.username}"/>
		<property name="password" value="$COUGAR-EV{jmx.html.password}"/>
        <property name="httpExport" value="$COUGAR-EV{jmx.html.export}"/>
	</bean>

    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>

    <bean id="log4jLoggingControl" class="com.betfair.cougar.core.impl.logging.Log4jLoggingControl">
        <property name="logLevels">
            <map>
                <entry key="" value="$COUGAR{cougar.log.level}"/>
                <!-- ROOT LEVEL LOGGER -->
            </map>
        </property>
    </bean>

    <bean id="cougarInternalMBeanExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="server" ref="mbeanServer"/>

        <property name="registrationBehavior" ref="org.springframework.jmx.export.MBeanExporter.REGISTRATION_REPLACE_EXISTING"/>

        <property name="beans">
            <map>
                <entry key="CoUGAR:name=executionVenue" value-ref="executionVenue"/>
                <entry key="CoUGAR:name=Logging" value-ref="loggingErrorManager"/>
                <entry key="CoUGAR:name=eventLogging" value-ref="cougar.core.EventLogger"/>
                <entry key="CoUGAR:name=faultController" value-ref="faultController"/>
                <entry key="CoUGAR:name=LoggingControl" value-ref="cougar.core.LoggingControl"/>
                <entry key="CoUGAR:name=GeoIPLocator" value-ref="cougar.core.GeoIPLocator"/>
                <entry key="CoUGAR:name=serviceStatusController" value-ref="inOutServiceMonitor"/>
            </map>
        </property>

        <property name="assembler">
            <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
                <property name="attributeSource">
                    <bean id="jmxAttributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>
                </property>
            </bean>
        </property>
    </bean>



    <!-- these abstract Gate control beans make it easier for modules to register themselves as
            GateListeners -->
   <bean id="baseGateRegisterer" class="com.betfair.cougar.core.api.GateRegisterer"
           abstract="true"
           scope="prototype">
       <constructor-arg index="0" ref="cougar.core.StartingGate"/>
   </bean>

   <bean id="baseGateListenerAdapter" class="com.betfair.cougar.core.api.GateListenerAdapter"
           abstract="true"
           scope="prototype"/>


   <!-- The default monitor exposed by Cougar -->
   <bean name="monitorRegistry" class="com.betfair.tornjak.monitor.DefaultMonitorRegistry">
        <property name="statusAggregator" ref="overallStatus"/>
           <property name="monitors">
            <list>
                <ref local="freeSpaceMonitor" />
                <ref local="inOutServiceMonitor" />
            </list>
        </property>
    </bean>

    <bean name="overallStatus" class="com.betfair.tornjak.monitor.OverallStatus">
        <property name="monitorRegistry" ref="monitorRegistry"/>
    </bean>

    <bean id="freeSpaceMonitor" class="com.betfair.tornjak.monitor.FreeSpaceMonitor">
        <constructor-arg index="0" value="$COUGAR{cougar.log.dir}"/>
        <constructor-arg index="1" type="long" value="$COUGAR{cougar.log.bytes.required}"/>
    </bean>

    <bean id="inOutServiceMonitor" class="com.betfair.tornjak.monitor.service.InOutServiceMonitor">
        <constructor-arg index="0" value="Cougar Service Status Monitor"/>
        <constructor-arg index="1">
            <bean class="java.io.File">
                <constructor-arg value="$COUGAR-EV{cougar.service.status.file}"/>
            </bean>
        </constructor-arg>
    </bean>
    <!-- beans exported from this module should be accessed at the alias address which -->
    <!-- forms part of the module's interface -->

    <alias name="monitorRegistry"                       alias="cougar.core.MonitorRegistry"/>
    <alias name="htmlAdapter"                           alias="cougar.core.JmxHtmlAdapter"/>
    <alias name="jmxControl"                            alias="cougar.core.JmxControl"/>
    <alias name="$COUGAR-EV{cougar.log.loggingControl}" alias="cougar.core.LoggingControl"/>
    <alias name="baseGateRegisterer"                    alias="cougar.core.GateRegisterer"/>
    <alias name="baseGateListenerAdapter"               alias="cougar.core.GateListener"/>
    <alias name="executionVenue"                        alias="cougar.core.ExecutionVenue"/>
    <alias name="executionVenue"                        alias="cougar.core.StartingGate"/>
    <alias name="inOutServiceMonitor"                   alias="cougar.core.serviceStatusController"/>
</beans>
